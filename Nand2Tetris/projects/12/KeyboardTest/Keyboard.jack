// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/Keyboard.jack

/**
 * A library for handling user input from the keyboard.
 */
class Keyboard {
    static Array kbd;

    /** Initializes the keyboard. */
    function void init() {
        let kbd = 24576;
        return;
    } 

    /**
     * Returns the character of the currently pressed key on the keyboard;
     * if no key is currently pressed, returns 0.
     *
     * Recognizes all ASCII characters, as well as the following keys:
     * new line = 128 = String.newline()
     * backspace = 129 = String.backspace()
     * left arrow = 130
     * up arrow = 131
     * right arrow = 132
     * down arrow = 133
     * home = 134
     * End = 135
     * page up = 136
     * page down = 137
     * insert = 138
     * delete = 139
     * ESC = 140
     * F1 - F12 = 141 - 152
     */
    function char keyPressed() {
        return kbd[0];
    }

    /**								
     * Waits until a key is pressed on the keyboard and released,
     * then echoes the key to the screen, and returns the character 
     * of the pressed key.
     */
    function char readChar() {
        var int c;
        while(kbd[0] = 0) {}
        let c = kbd[0];
        while(~(kbd[0] = 0)) {}
        if ((c > 31) & (c < 128)) {
            do Output.printChar(c);
        }
        return c;
    }

    /**								
     * Displays the message on the screen, reads from the keyboard the entered
     * text until a newline character is detected, echoes the text to the screen,
     * and returns its value. Also handles user backspaces.
     */
    function String readLine(String message) {
        var String str, temp;
        var int c, size, cnt, i;
        let size = 8;
        let str = String.new(size);
        do Output.printString(message);
        while (true) {
            let c = Keyboard.readChar();
            if (c = 128) { // \n
                do Output.println();
                return str;
            } else {
                if (c = 129) { // backspace
                    if (cnt > 0) {
                        do Output.backSpace();
                        do str.eraseLastChar();
                        let cnt = cnt - 1;
                    }
                } else {
                    if (cnt = size) {
                        let temp = str;
                        let size = size * 2;
                        let str = String.new(size);
                        let i = 0;
                        while (i < cnt) {
                            let str = str.appendChar(temp.charAt(i));
                            let i = i + 1;
                        }
                        do temp.dispose();
                    }
                    let str = str.appendChar(c);
                    let cnt = cnt + 1;
                }
            }
        }
        return str;
    }   

    /**								
     * Displays the message on the screen, reads from the keyboard the entered
     * text until a newline character is detected, echoes the text to the screen,
     * and returns its integer value (until the first non-digit character in the
     * entered text is detected). Also handles user backspaces. 
     */
    function int readInt(String message) {
        var String str;
        let str = Keyboard.readLine(message);
        return str.intValue();
    }
}
